// Q : Problem A. Tic-Tac-Toe-Tomek

package main

import (
	. "fmt"
)

func won(tttt []string, p uint8) bool {

	cd1, cd2 := 0, 0
	for i := 0; i < 4; i++ {
		cr, cc := 0, 0

		for j := 0; j < 4; j++ {
			if tttt[i][j] == p || tttt[i][j] == 'T' {
				cr++
			}
			if tttt[j][i] == p || tttt[j][i] == 'T' {
				cc++
			}
			if i == j && (tttt[i][j] == p || tttt[i][j] == 'T') {
				cd1++
			}
			if i == 3-j && (tttt[i][j] == p || tttt[i][j] == 'T') {
				cd2++
			}
		}
		if cr == 4 || cc == 4 {
			return true
		}
	}
	return cd1 == 4 || cd2 == 4
}

func completed(tttt []string) bool {
	for i := 0; i < 4; i++ {
		for j := 0; j < 4; j++ {
			if tttt[i][j] == '.' {
				return false
			}
		}
	}
	return true
}

func main() {

	T := 0
	Scan(&T)
	for t := 0; t < T; t++ {

		tttt := make([]string, 4)
		for i := 0; i < 4; i++ {
			Scan(&tttt[i])
		}

		pX := won(tttt, 'X')
		pO := won(tttt, 'O')

		var y string
		if pX && !pO {
			y = "X won"
		} else if pO && !pX {
			y = "O won"
		} else if completed(tttt) {
			y = "Draw"
		} else {
			y = "Game has not completed"
		}

		Printf("Case #%d: %s\n", t+1, y)
	}
}
