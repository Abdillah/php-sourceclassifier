package main

import "fmt"
import "strings"

func si() int {
	var ret int
	_, err := fmt.Scanf("%d", &ret)
	if err != nil {
		panic(err)
	}
	return ret
}

func ss() string {
    var ret string
    _, err := fmt.Scan(&ret)
    if err != nil {
		panic(err)
	}
	return ret
}

func eq(a string, b string) bool {
    return strings.EqualFold(a, b)
}
        
func solve() {
    n := 4

	board := make([][]string, n)
	for row := range board {
		board[row] = make([]string, n)
        row_str := ss() 
		for col := range board[row] {
			board[row][col] = row_str[col:col+1] 
		}
	}

    finished := true
    xWon := false
    oWon := false
    xCount := 0
    yCount := 0

    for i:=0; i<n; i++ {
        for j:=0;j<n;j++ {
            if eq(".", board[i][j]) {
                finished = false
            }
            if eq("X", board[i][j]) {
                xCount++
            }
            if eq("O", board[i][j]) {
                yCount++
            }

            for k:=0; k<2; k++ {
                winner := false
                player := "X"
                if k == 1 {
                    player = "O"
                }

                if line(board, player, j, i, 1, 0) == 4 {
                    winner = true
                }
                if line(board, player, j, i, 0, 1) == 4 {
                    winner = true
                }
                if line(board, player, j, i, 1, 1) == 4 {
                    winner = true
                }
                if line(board, player, j, i, 1, -1) == 4 {
                    winner = true
                }

                if winner {
                    if k == 0 {
                        xWon = true
                    } else {
                        oWon = true
                    }
                }
            }
        }
    }

    xTurn := xCount > yCount
    resp := "Game has not completed"
    if xTurn && xWon {
        resp = "X won"
    } else if !xTurn && oWon {
        resp = "O won"
    } else if finished {
        resp = "Draw"
    }
    fmt.Println(resp)
}

func line(board [][]string, player string, x int, y int, xInc int, yInc int) int {
   if x < 0 || y < 0 || x >= 4 || y >= 4 {
       return 0 
   }
   if !eq(player, board[y][x]) && !eq("T", board[y][x]) {
       return 0
   }
   return 1 + line(board, player, x+xInc, y+yInc, xInc, yInc) 
}

func main() {
	c := si()
	for i := 1; i <= c; i++ {
		fmt.Printf("Case #%d: ", i)
		solve()
	}
}
