//Regards to Rob Pike and the Golang team
package main

import (
	"io"
	"os"
	"fmt"
	"strconv"
)

var cin = make(chan string)
var cout = make(chan string)
var exit = make(chan int)

func reopenStdin( file string ) {
	fin,err := os.Open(file)
	if err != nil { panic(err) }
	defer fin.Close()

	var s string
	for {
		_, err := fmt.Fscanf(fin, "%s", &s)
		if err != nil{
			if err == io.EOF {
				close(cin)
				return
			}
			fmt.Println(err)
		}
		cin<- s
	} 
}

func reopenStdout( file string ){
	fout,err := os.Create(file)
	if err != nil { panic(err) }
	defer fout.Close()

	for {
		s,ok := <-cout 
		if !ok {
			exit<- 1
			return 
		}
		fout.WriteString(s)
	}
}

func readInt() (int){
	s,_ := <-cin
	i,_ := strconv.Atoi(s)
	return i
}
func readFloat() (float64){
	s,_ := <-cin
	f,_ := strconv.ParseFloat(s, 64)
	return f
}

func evaluate(dt []map[int]int) (int){
	sum1 := 0
	sum2 := 0
	for i:=0; i<4; i++{
		sum1 = 0
		sum2 = 0
		for j:=0; j<4; j++{
			sum1 += dt[i][j]
			sum2 += dt[j][i]
		} 
		if sum1 == 4 || sum1 == -4 {
			return sum1
		}
		if sum2 == 4 || sum2 == -4 {
			return sum2
		}
	}

	sum3 := 0
	sum4 := 0
	for i,j:=0,0; i<4; i,j=i+1,j+1 {
		sum3 += dt[i][j]
		sum4 += dt[i][3-j]
	}
	if sum3 == 4 || sum3 == -4 {
		return sum3
	}
	if sum4 == 4 || sum4 == -4 {
		return sum4
	}
	
	return 0
}

func main(){
	go reopenStdin("A-large.in")
	go reopenStdout("temp.out")

	g := readInt()
	dt := make([]map[int]int, 4)
	dt1 := make([]map[int]int,4)

	for i:=0; i<4; i++{
		dt[i] = make(map[int]int, 4)
		dt1[i] = make(map[int]int, 4)
	}

	for i:=1; i<=g; i++{
		not_complete := false 
		for i:=0; i<4; i++{
			s,_ := <-cin
			for j:=0; j<4; j++{
				if s[j] == 'X' {
					dt[i][j] = -1
					dt1[i][j] = -1
				} else if s[j] == 'O' {
					dt[i][j] = 1
					dt1[i][j] = 1
				} else if s[j] == 'T' {
					dt[i][j] = 1
					dt1[i][j] = -1
				} else {
					dt[i][j] = 0
					dt1[i][j] = 0
					not_complete = true
				}
			}
		}

		r := evaluate(dt)
		r1 := evaluate(dt1)
		if r == -4 || r1 == -4 { 
			cout<- fmt.Sprintf("Case #%d: X won\n", i)
		} else if r == 4 || r1 == 4 {
			cout<- fmt.Sprintf("Case #%d: O won\n", i)
		} else if not_complete{
			cout<- fmt.Sprintf("Case #%d: Game has not completed\n", i)
		} else {
			cout<- fmt.Sprintf("Case #%d: Draw\n", i)
		}

		<-cin
	}

	close(cout)
	<-exit
}

